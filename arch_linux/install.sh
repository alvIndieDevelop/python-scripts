#!/bin/bash

# Arch Linux Maintenance Script Installer
# Version 1.0 - Simple Installation

set -e

# Colores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Función para imprimir con colores
print_status() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

print_header() {
    echo -e "${BLUE}================================================${NC}"
    echo -e "${BLUE}$1${NC}"
    echo -e "${BLUE}================================================${NC}"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

# Banner de inicio
print_header "🚀 ARCH LINUX MAINTENANCE SCRIPT INSTALLER"
echo ""
echo "🔧 Professional system maintenance tool for Arch Linux"
echo "📦 Package management, cleanup, health checks, and optimization"
echo "🛡️  Safe, secure, and user-friendly maintenance operations"
echo ""

# Verificar si estamos en Arch Linux
if ! grep -q "Arch Linux" /etc/os-release 2>/dev/null; then
    print_warning "This script is designed for Arch Linux"
    read -p "Continue anyway? (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# Verificar permisos de root
if [[ $EUID -eq 0 ]]; then
    print_error "This script should not be run as root"
    print_error "Please run as a regular user with sudo privileges"
    exit 1
fi

# Verificar dependencias
print_status "Checking dependencies..."
DEPENDENCIES=("python3" "sudo")
MISSING_DEPS=()

for dep in "${DEPENDENCIES[@]}"; do
    if ! command -v "$dep" &> /dev/null; then
        MISSING_DEPS+=("$dep")
    fi
done

if [ ${#MISSING_DEPS[@]} -gt 0 ]; then
    print_error "Missing dependencies: ${MISSING_DEPS[*]}"
    print_status "Installing missing dependencies..."
    sudo pacman -S --noconfirm "${MISSING_DEPS[@]}"
fi

# Directorios de instalación
INSTALL_DIR="$HOME/.local/bin"
SCRIPT_NAME="archm-maintenance"
CONFIG_DIR="$HOME/.config/arch-maintenance"

# Crear directorios necesarios
print_status "Creating installation directories..."
mkdir -p "$INSTALL_DIR"
mkdir -p "$CONFIG_DIR"

# Copiar el script principal
print_status "Installing main script..."
SCRIPT_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/arch_maintenance.py"

if [ ! -f "$SCRIPT_PATH" ]; then
    print_error "Main script not found at: $SCRIPT_PATH"
    print_error "Please run this installer from the same directory as arch_maintenance.py"
    exit 1
fi

cp "$SCRIPT_PATH" "$INSTALL_DIR/$SCRIPT_NAME"
chmod +x "$INSTALL_DIR/$SCRIPT_NAME"

# Crear enlace simbólico para comando corto
if [ ! -L "$INSTALL_DIR/archm" ]; then
    ln -sf "$INSTALL_DIR/$SCRIPT_NAME" "$INSTALL_DIR/archm"
fi

# Agregar al PATH si no está
if [[ ":$PATH:" != *":$INSTALL_DIR:"* ]]; then
    print_status "Adding $INSTALL_DIR to PATH..."
    
    # Detectar shell
    if [[ "$SHELL" == *"zsh"* ]]; then
        SHELL_RC="$HOME/.zshrc"
    elif [[ "$SHELL" == *"bash"* ]]; then
        SHELL_RC="$HOME/.bashrc"
    else
        SHELL_RC="$HOME/.profile"
    fi
    
    # Agregar al PATH
    if ! grep -q "$INSTALL_DIR" "$SHELL_RC" 2>/dev/null; then
        echo "" >> "$SHELL_RC"
        echo "# Arch Linux Maintenance Script" >> "$SHELL_RC"
        echo "export PATH=\"$INSTALL_DIR:\$PATH\"" >> "$SHELL_RC"
        print_success "PATH updated in $SHELL_RC"
    fi
fi

# Configurar recordatorio automático
print_header "⏰ CONFIGURACIÓN DE RECORDATORIOS AUTOMÁTICOS"
echo ""
echo "¿Con qué frecuencia quieres que aparezca el recordatorio de mantenimiento?"
echo ""
echo "1. Semanal (recomendado)"
echo "2. Quincenal (cada 2 semanas)"
echo "3. Mensual (cada 4 semanas)"
echo "4. Personalizado (especificar días)"
echo "5. No configurar recordatorios automáticos"
echo ""

read -p "Selecciona una opción (1-5): " reminder_choice

case $reminder_choice in
    1)
        REMINDER_DAYS=7
        REMINDER_NAME="Semanal"
        ;;
    2)
        REMINDER_DAYS=14
        REMINDER_NAME="Quincenal"
        ;;
    3)
        REMINDER_DAYS=28
        REMINDER_NAME="Mensual"
        ;;
    4)
        read -p "Especifica el número de días entre recordatorios: " REMINDER_DAYS
        REMINDER_NAME="Personalizado ($REMINDER_DAYS días)"
        ;;
    5)
        REMINDER_DAYS=0
        REMINDER_NAME="Deshabilitado"
        ;;
    *)
        print_warning "Opción inválida, usando recordatorio semanal por defecto"
        REMINDER_DAYS=7
        REMINDER_NAME="Semanal"
        ;;
esac

if [ $REMINDER_DAYS -gt 0 ]; then
    print_status "Configurando recordatorio $REMINDER_NAME..."
    
    # Crear script de recordatorio
    REMINDER_SCRIPT="$CONFIG_DIR/maintenance-reminder.sh"
    
    cat > "$REMINDER_SCRIPT" << EOF
#!/bin/bash
# Arch Linux Maintenance Reminder
# Generated by installer

MAINTENANCE_LOG="\$HOME/.arch_maintenance.log"
REMINDER_FILE="\$HOME/.arch_maintenance_reminder"
REMINDER_DAYS=$REMINDER_DAYS

# Verificar si debe mostrar recordatorio
should_show_reminder() {
    if [ ! -f "\$MAINTENANCE_LOG" ]; then
        return 1
    fi
    
    if [ -f "\$REMINDER_FILE" ]; then
        LAST_REMINDER=\$(cat "\$REMINDER_FILE")
        CURRENT_DATE=\$(date +%Y-%m-%d)
        
        LAST_TIMESTAMP=\$(date -d "\$LAST_REMINDER" +%s 2>/dev/null)
        CURRENT_TIMESTAMP=\$(date +%s)
        DAYS_DIFF=\$(( (CURRENT_TIMESTAMP - LAST_TIMESTAMP) / 86400 ))
        
        if [ \$DAYS_DIFF -lt \$REMINDER_DAYS ]; then
            return 1
        fi
    fi
    
    return 0
}

# Mostrar recordatorio
show_reminder() {
    echo ""
    echo "╔══════════════════════════════════════════════════════════════╗"
    echo "║                    MAINTENANCE REMINDER                   ║"
    echo "╚══════════════════════════════════════════════════════════════╝"
    echo ""
    echo "⏰ It's time for your $REMINDER_NAME Arch Linux maintenance!"
    echo "💡 This helps keep your system secure and optimized."
    echo ""
    echo "Options:"
    echo "   🚀 archm-maintenance --full     (Complete maintenance)"
    echo "   📋 archm-maintenance            (Interactive menu)"
    echo "   📊 archm-maintenance --status  (Check system status)"
    echo ""
    
    read -p "🔄 Run maintenance now? (Y/n): " -n 1 -r
    echo
    
    if [[ \$REPLY =~ ^[Nn]\$ ]]; then
        echo "⏰ No problem! You can run it later with: archm-maintenance --full"
        echo "💡 Reminder will appear again in \$REMINDER_DAYS days."
    else
        echo "🚀 Starting maintenance..."
        archm-maintenance --full
    fi
    
    echo ""
}

# Actualizar timestamp del recordatorio
update_reminder_timestamp() {
    date +%Y-%m-%d > "\$REMINDER_FILE"
}

# Función principal
main() {
    if should_show_reminder; then
        show_reminder
        update_reminder_timestamp
    fi
}

# Ejecutar solo si se llama directamente
if [[ "\${BASH_SOURCE[0]}" == "\${0}" ]]; then
    main
fi
EOF

    chmod +x "$REMINDER_SCRIPT"
    
    # Configurar en shell
    if [[ "$SHELL" == *"zsh"* ]]; then
        SHELL_RC="$HOME/.zshrc"
    elif [[ "$SHELL" == *"bash"* ]]; then
        SHELL_RC="$HOME/.bashrc"
    else
        SHELL_RC="$HOME/.profile"
    fi
    
    # Agregar al shell
    if ! grep -q "maintenance-reminder.sh" "$SHELL_RC" 2>/dev/null; then
        echo "" >> "$SHELL_RC"
        echo "# Arch Linux Maintenance Reminder" >> "$SHELL_RC"
        echo "if [ -f ~/.config/arch-maintenance/maintenance-reminder.sh ]; then" >> "$SHELL_RC"
        echo "    source ~/.config/arch-maintenance/maintenance-reminder.sh" >> "$SHELL_RC"
        echo "fi" >> "$SHELL_RC"
        print_success "Reminder configured in $SHELL_RC"
    fi
    
    print_success "Recordatorio $REMINDER_NAME configurado exitosamente"
else
    print_status "Recordatorios automáticos deshabilitados"
fi

# Instalación completada
print_header "🎉 INSTALACIÓN COMPLETADA"
echo ""
print_success "Arch Linux Maintenance Script instalado exitosamente!"
echo ""
echo "📁 Ubicaciones de instalación:"
echo "   🚀 Script principal: $INSTALL_DIR/$SCRIPT_NAME"
echo "   🔗 Comando corto: $INSTALL_DIR/archm"
echo "   ⚙️  Configuración: $CONFIG_DIR"
echo ""
echo "💻 Comandos disponibles:"
echo "   archm-maintenance --help     (Mostrar ayuda)"
echo "   archm-maintenance --full     (Mantenimiento completo)"
echo "   archm-maintenance            (Menú interactivo)"
echo "   archm --help                 (Comando corto)"
echo ""
echo "⏰ Recordatorio configurado: $REMINDER_NAME"
echo ""

# Preguntar si ejecutar mantenimiento ahora
read -p "🔄 ¿Ejecutar mantenimiento ahora para probar la instalación? (Y/n): " -n 1 -r
echo

if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    print_status "Ejecutando mantenimiento de prueba..."
    export PATH="$INSTALL_DIR:$PATH"
    archm-maintenance --status
else
    print_status "Puedes ejecutar mantenimiento más tarde con: archm-maintenance --full"
fi

echo ""
print_success "¡Instalación completada! Reinicia tu terminal o ejecuta: source $SHELL_RC"
echo ""
print_warning "Si tienes problemas, revisa los logs en: $CONFIG_DIR" 